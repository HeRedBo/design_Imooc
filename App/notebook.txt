# 笔记

一、适配器模式
    适配器模式 可以将截不同的函数接口封装成统一的API

    实际应用举例： php的数据库操作有mysql、mysqli、pdo三种 可以通过适配器模式
    统一成一致、 类似的场景还有 cache 适配器，将memcache、redis、file、apc等不同的
    缓存函数，统一成一致

二、策略模式
    策略模式、将一组特定的行为和算法封装成类，以适应某一些特定的上下文环境，这种模式就是策略模式
    使用用例 ： 例如 一个电商网站系统，针对男性女性用户要调整的不同的上的类目，并且展示不同的广告
    使用策略模式 可以实现Ioc,依赖倒置、控制反转


四、 观察者模式
    观察者模式，当一个对象状态发生改变是，依赖他的对象会收到通知，并自动更新
    场景： 当一个时间发送，要执行一连串的更新操作，传统的方式就是在其后加入逻辑处理，当更新的逻辑增加之后，代码变得难以维护，这种方式是耦合的，侵入式的，增加新的逻辑需要修改事件主体的代码

    观察者模式实现了低耦合，非侵入是的通知与更新机制

五、原型模式
    ① 与工厂模式作用类似，都是用来创建对象
    ② 与工厂模式实现不同，原型模式是事先创建好一个原型对象，然后通过clone原型对象创建新对象。这样子就避免了类创建时从复的初始化操作
    ③ 原型模式适用于大对象的创建，创建一个大对象需要很大的开销，如果每次都new会消耗更大，原型模式仅需内存拷贝而已
